[General]
# General configuration
network = Ring6
sim-time-limit = 3*64*16.384us
# Network bitrate
**.eth[*].bitrate = 1000Mbps

# ---- NETWORK CONFIGURATION ----
# Number of runs
repeat = 1 + 200
*.repetition = ${repetition}

# Configuration for device mac address
*.de0.eth[0].address = "00-00-00-00-00-01"
*.de1.eth[0].address = "00-00-00-00-00-02"
*.de2.eth[0].address = "00-00-00-00-00-03"
*.de3.eth[0].address = "00-00-00-00-00-04"
*.de4.eth[0].address = "00-00-00-00-00-05"
*.de5.eth[0].address = "00-00-00-00-00-06"

# Configuration for error generation
# Probability for: short gate; late gate; early gate; queue disorder; packet delay; packet loss
*.errorProb = [5, 15, 15, 5, 55, 5]
*.queueErrorMaxQuery = 3
*.packetLossErrorMaxQuery = 40

# Configuration for switch gates
# gcl at sw0, port0
*.sw0.eth[0].macLayer.queue.transmissionGate[0].offset = 63 * 16.384us
*.sw0.eth[0].macLayer.queue.transmissionGate[0].durations = [1 * 16.384us, 1 * 16.384us, 1 * 16.384us, 55 * 16.384us, 1 * 16.384us, 3 * 16.384us, 1 * 16.384us, 1 * 16.384us]
*.sw0.eth[0].hasTas = true
# gcl at sw0, port1
*.sw0.eth[1].macLayer.queue.transmissionGate[0].offset = 0 * 16.384us
*.sw0.eth[1].macLayer.queue.transmissionGate[0].durations = [1 * 16.384us, 3 * 16.384us, 1 * 16.384us, 35 * 16.384us, 1 * 16.384us, 3 * 16.384us, 1 * 16.384us, 19 * 16.384us]
*.sw0.eth[1].hasTas = true
# gcl at sw0, port2
*.sw0.eth[2].macLayer.queue.transmissionGate[0].offset = 0 * 16.384us
*.sw0.eth[2].macLayer.queue.transmissionGate[0].durations = [1 * 16.384us, 8 * 16.384us, 1 * 16.384us, 44 * 16.384us, 1 * 16.384us, 1 * 16.384us, 1 * 16.384us, 7 * 16.384us]
*.sw0.eth[2].hasTas = true
# gcl at sw1, port0
*.sw1.eth[0].macLayer.queue.transmissionGate[0].offset = 59 * 16.384us
*.sw1.eth[0].macLayer.queue.transmissionGate[0].durations = [1 * 16.384us, 9 * 16.384us, 1 * 16.384us, 29 * 16.384us, 1 * 16.384us, 23 * 16.384us]
*.sw1.eth[0].hasTas = true
# gcl at sw1, port2
*.sw1.eth[2].macLayer.queue.transmissionGate[0].offset = 1 * 16.384us
*.sw1.eth[2].macLayer.queue.transmissionGate[0].durations = [2 * 16.384us, 1 * 16.384us, 1 * 16.384us, 52 * 16.384us, 1 * 16.384us, 2 * 16.384us, 1 * 16.384us, 4 * 16.384us]
*.sw1.eth[2].hasTas = true
# gcl at sw1, port1
*.sw1.eth[1].macLayer.queue.transmissionGate[0].offset = 63 * 16.384us
*.sw1.eth[1].macLayer.queue.transmissionGate[0].durations = [1 * 16.384us, 14 * 16.384us, 2 * 16.384us, 17 * 16.384us, 1 * 16.384us, 5 * 16.384us, 1 * 16.384us, 23 * 16.384us]
*.sw1.eth[1].hasTas = true
# gcl at sw2, port0
*.sw2.eth[0].macLayer.queue.transmissionGate[0].offset = 62 * 16.384us
*.sw2.eth[0].macLayer.queue.transmissionGate[0].durations = [1 * 16.384us, 15 * 16.384us, 1 * 16.384us, 10 * 16.384us, 1 * 16.384us, 30 * 16.384us, 1 * 16.384us, 5 * 16.384us]
*.sw2.eth[0].hasTas = true
# gcl at sw2, port2
*.sw2.eth[2].macLayer.queue.transmissionGate[0].offset = 63 * 16.384us
*.sw2.eth[2].macLayer.queue.transmissionGate[0].durations = [1 * 16.384us, 12 * 16.384us, 1 * 16.384us, 39 * 16.384us, 1 * 16.384us, 8 * 16.384us, 1 * 16.384us, 1 * 16.384us]
*.sw2.eth[2].hasTas = true
# gcl at sw2, port1
*.sw2.eth[1].macLayer.queue.transmissionGate[0].offset = 47 * 16.384us
*.sw2.eth[1].macLayer.queue.transmissionGate[0].durations = [1 * 16.384us, 3 * 16.384us, 1 * 16.384us, 14 * 16.384us, 1 * 16.384us, 5 * 16.384us, 1 * 16.384us, 1 * 16.384us, 1 * 16.384us, 36 * 16.384us]
*.sw2.eth[1].hasTas = true
# gcl at sw3, port0
*.sw3.eth[0].macLayer.queue.transmissionGate[0].offset = 62 * 16.384us
*.sw3.eth[0].macLayer.queue.transmissionGate[0].durations = [1 * 16.384us, 15 * 16.384us, 1 * 16.384us, 24 * 16.384us, 1 * 16.384us, 1 * 16.384us, 1 * 16.384us, 20 * 16.384us]
*.sw3.eth[0].hasTas = true
# gcl at sw3, port2
*.sw3.eth[2].macLayer.queue.transmissionGate[0].offset = 0 * 16.384us
*.sw3.eth[2].macLayer.queue.transmissionGate[0].durations = [1 * 16.384us, 27 * 16.384us, 1 * 16.384us, 30 * 16.384us, 1 * 16.384us, 4 * 16.384us]
*.sw3.eth[2].hasTas = true
# gcl at sw3, port1
*.sw3.eth[1].macLayer.queue.transmissionGate[0].offset = 42 * 16.384us
*.sw3.eth[1].macLayer.queue.transmissionGate[0].durations = [2 * 16.384us, 13 * 16.384us, 1 * 16.384us, 16 * 16.384us, 1 * 16.384us, 31 * 16.384us]
*.sw3.eth[1].hasTas = true
# gcl at sw4, port0
*.sw4.eth[0].macLayer.queue.transmissionGate[0].offset = 53 * 16.384us
*.sw4.eth[0].macLayer.queue.transmissionGate[0].durations = [1 * 16.384us, 11 * 16.384us, 2 * 16.384us, 13 * 16.384us, 1 * 16.384us, 13 * 16.384us, 1 * 16.384us, 22 * 16.384us]
*.sw4.eth[0].hasTas = true
# gcl at sw4, port2
*.sw4.eth[2].macLayer.queue.transmissionGate[0].offset = 63 * 16.384us
*.sw4.eth[2].macLayer.queue.transmissionGate[0].durations = [1 * 16.384us, 25 * 16.384us, 1 * 16.384us, 37 * 16.384us]
*.sw4.eth[2].hasTas = true
# gcl at sw4, port1
*.sw4.eth[1].macLayer.queue.transmissionGate[0].offset = 62 * 16.384us
*.sw4.eth[1].macLayer.queue.transmissionGate[0].durations = [1 * 16.384us, 4 * 16.384us, 1 * 16.384us, 47 * 16.384us, 1 * 16.384us, 10 * 16.384us]
*.sw4.eth[1].hasTas = true
# gcl at sw5, port0
*.sw5.eth[0].macLayer.queue.transmissionGate[0].offset = 63 * 16.384us
*.sw5.eth[0].macLayer.queue.transmissionGate[0].durations = [1 * 16.384us, 6 * 16.384us, 1 * 16.384us, 46 * 16.384us, 3 * 16.384us, 7 * 16.384us]
*.sw5.eth[0].hasTas = true
# gcl at sw5, port2
*.sw5.eth[2].macLayer.queue.transmissionGate[0].offset = 54 * 16.384us
*.sw5.eth[2].macLayer.queue.transmissionGate[0].durations = [1 * 16.384us, 40 * 16.384us, 1 * 16.384us, 22 * 16.384us]
*.sw5.eth[2].hasTas = true
# gcl at sw5, port1
*.sw5.eth[1].macLayer.queue.transmissionGate[0].offset = 61 * 16.384us
*.sw5.eth[1].macLayer.queue.transmissionGate[0].durations = [1 * 16.384us, 39 * 16.384us, 1 * 16.384us, 18 * 16.384us, 2 * 16.384us, 3 * 16.384us]
*.sw5.eth[1].hasTas = true

# Configuration for switch forwarding latency
*.sw*.eth[*].typename = "DelayedLayeredEthernetInterface"
*.sw*.eth[*].processingTime = 2us

# Configuration for flows
*.de0.numApps = 7
*.de1.numApps = 8
*.de2.numApps = 9
*.de3.numApps = 8
*.de4.numApps = 9
*.de5.numApps = 9
# Install LogUdpSourceApp on de1 and UdpSinkApp on de2, #flow0
*.de1.app[0].typename = "LogUdpSourceApp"
*.de1.app[0].display-name = "flow0_1to2"
*.de1.app[0].flowId = 0
*.de1.app[0].io.destAddress = "de2"
*.de1.app[0].io.destPort = 1000
*.de1.app[0].source.initialProductionOffset = 16 * 16.384us
*.de2.app[0].typename = "UdpSinkApp"
*.de2.app[0].io.localPort = 1000
# Install LogUdpSourceApp on de5 and UdpSinkApp on de2, #flow1
*.de5.app[0].typename = "LogUdpSourceApp"
*.de5.app[0].display-name = "flow1_5to2"
*.de5.app[0].flowId = 1
*.de5.app[0].io.destAddress = "de2"
*.de5.app[0].io.destPort = 1001
*.de5.app[0].source.initialProductionOffset = 62 * 16.384us
*.de2.app[1].typename = "UdpSinkApp"
*.de2.app[1].io.localPort = 1001
# Install LogUdpSourceApp on de4 and UdpSinkApp on de2, #flow2
*.de4.app[0].typename = "LogUdpSourceApp"
*.de4.app[0].display-name = "flow2_4to2"
*.de4.app[0].flowId = 2
*.de4.app[0].io.destAddress = "de2"
*.de4.app[0].io.destPort = 1002
*.de4.app[0].source.initialProductionOffset = 26 * 16.384us
*.de2.app[2].typename = "UdpSinkApp"
*.de2.app[2].io.localPort = 1002
# Install LogUdpSourceApp on de3 and UdpSinkApp on de5, #flow3
*.de3.app[0].typename = "LogUdpSourceApp"
*.de3.app[0].display-name = "flow3_3to5"
*.de3.app[0].flowId = 3
*.de3.app[0].io.destAddress = "de5"
*.de3.app[0].io.destPort = 1000
*.de3.app[0].source.initialProductionOffset = 53 * 16.384us
*.de5.app[1].typename = "UdpSinkApp"
*.de5.app[1].io.localPort = 1000
# Install LogUdpSourceApp on de1 and UdpSinkApp on de5, #flow4
*.de1.app[1].typename = "LogUdpSourceApp"
*.de1.app[1].display-name = "flow4_1to5"
*.de1.app[1].flowId = 4
*.de1.app[1].io.destAddress = "de5"
*.de1.app[1].io.destPort = 1001
*.de1.app[1].source.initialProductionOffset = 62 * 16.384us
*.de5.app[2].typename = "UdpSinkApp"
*.de5.app[2].io.localPort = 1001
# Install LogUdpSourceApp on de2 and UdpSinkApp on de4, #flow5
*.de2.app[3].typename = "LogUdpSourceApp"
*.de2.app[3].display-name = "flow5_2to4"
*.de2.app[3].flowId = 5
*.de2.app[3].io.destAddress = "de4"
*.de2.app[3].io.destPort = 1000
*.de2.app[3].source.initialProductionOffset = 20 * 16.384us
*.de4.app[1].typename = "UdpSinkApp"
*.de4.app[1].io.localPort = 1000
# Install LogUdpSourceApp on de0 and UdpSinkApp on de5, #flow6
*.de0.app[0].typename = "LogUdpSourceApp"
*.de0.app[0].display-name = "flow6_0to5"
*.de0.app[0].flowId = 6
*.de0.app[0].io.destAddress = "de5"
*.de0.app[0].io.destPort = 1002
*.de0.app[0].source.initialProductionOffset = 53 * 16.384us
*.de5.app[3].typename = "UdpSinkApp"
*.de5.app[3].io.localPort = 1002
# Install LogUdpSourceApp on de5 and UdpSinkApp on de0, #flow7
*.de5.app[4].typename = "LogUdpSourceApp"
*.de5.app[4].display-name = "flow7_5to0"
*.de5.app[4].flowId = 7
*.de5.app[4].io.destAddress = "de0"
*.de5.app[4].io.destPort = 1000
*.de5.app[4].source.initialProductionOffset = 61 * 16.384us
*.de0.app[1].typename = "UdpSinkApp"
*.de0.app[1].io.localPort = 1000
# Install LogUdpSourceApp on de1 and UdpSinkApp on de4, #flow8
*.de1.app[2].typename = "LogUdpSourceApp"
*.de1.app[2].display-name = "flow8_1to4"
*.de1.app[2].flowId = 8
*.de1.app[2].io.destAddress = "de4"
*.de1.app[2].io.destPort = 1001
*.de1.app[2].source.initialProductionOffset = 34 * 16.384us
*.de4.app[2].typename = "UdpSinkApp"
*.de4.app[2].io.localPort = 1001
# Install LogUdpSourceApp on de2 and UdpSinkApp on de1, #flow9
*.de2.app[4].typename = "LogUdpSourceApp"
*.de2.app[4].display-name = "flow9_2to1"
*.de2.app[4].flowId = 9
*.de2.app[4].io.destAddress = "de1"
*.de2.app[4].io.destPort = 1000
*.de2.app[4].source.initialProductionOffset = 13 * 16.384us
*.de1.app[3].typename = "UdpSinkApp"
*.de1.app[3].io.localPort = 1000
# Install LogUdpSourceApp on de1 and UdpSinkApp on de0, #flow10
*.de1.app[4].typename = "LogUdpSourceApp"
*.de1.app[4].display-name = "flow10_1to0"
*.de1.app[4].flowId = 10
*.de1.app[4].io.destAddress = "de0"
*.de1.app[4].io.destPort = 1001
*.de1.app[4].source.initialProductionOffset = 57 * 16.384us
*.de0.app[2].typename = "UdpSinkApp"
*.de0.app[2].io.localPort = 1001
# Install LogUdpSourceApp on de4 and UdpSinkApp on de5, #flow11
*.de4.app[3].typename = "LogUdpSourceApp"
*.de4.app[3].display-name = "flow11_4to5"
*.de4.app[3].flowId = 11
*.de4.app[3].io.destAddress = "de5"
*.de4.app[3].io.destPort = 1003
*.de4.app[3].source.initialProductionOffset = 6 * 16.384us
*.de5.app[5].typename = "UdpSinkApp"
*.de5.app[5].io.localPort = 1003
# Install LogUdpSourceApp on de4 and UdpSinkApp on de3, #flow12
*.de4.app[4].typename = "LogUdpSourceApp"
*.de4.app[4].display-name = "flow12_4to3"
*.de4.app[4].flowId = 12
*.de4.app[4].io.destAddress = "de3"
*.de4.app[4].io.destPort = 1000
*.de4.app[4].source.initialProductionOffset = 0 * 16.384us
*.de3.app[1].typename = "UdpSinkApp"
*.de3.app[1].io.localPort = 1000
# Install LogUdpSourceApp on de0 and UdpSinkApp on de4, #flow13
*.de0.app[3].typename = "LogUdpSourceApp"
*.de0.app[3].display-name = "flow13_0to4"
*.de0.app[3].flowId = 13
*.de0.app[3].io.destAddress = "de4"
*.de0.app[3].io.destPort = 1002
*.de0.app[3].source.initialProductionOffset = 8 * 16.384us
*.de4.app[5].typename = "UdpSinkApp"
*.de4.app[5].io.localPort = 1002
# Install LogUdpSourceApp on de3 and UdpSinkApp on de0, #flow14
*.de3.app[2].typename = "LogUdpSourceApp"
*.de3.app[2].display-name = "flow14_3to0"
*.de3.app[2].flowId = 14
*.de3.app[2].io.destAddress = "de0"
*.de3.app[2].io.destPort = 1002
*.de3.app[2].source.initialProductionOffset = 63 * 16.384us
*.de0.app[4].typename = "UdpSinkApp"
*.de0.app[4].io.localPort = 1002
# Install LogUdpSourceApp on de3 and UdpSinkApp on de2, #flow15
*.de3.app[3].typename = "LogUdpSourceApp"
*.de3.app[3].display-name = "flow15_3to2"
*.de3.app[3].flowId = 15
*.de3.app[3].io.destAddress = "de2"
*.de3.app[3].io.destPort = 1003
*.de3.app[3].source.initialProductionOffset = 58 * 16.384us
*.de2.app[5].typename = "UdpSinkApp"
*.de2.app[5].io.localPort = 1003
# Install LogUdpSourceApp on de5 and UdpSinkApp on de1, #flow16
*.de5.app[6].typename = "LogUdpSourceApp"
*.de5.app[6].display-name = "flow16_5to1"
*.de5.app[6].flowId = 16
*.de5.app[6].io.destAddress = "de1"
*.de5.app[6].io.destPort = 1001
*.de5.app[6].source.initialProductionOffset = 42 * 16.384us
*.de1.app[5].typename = "UdpSinkApp"
*.de1.app[5].io.localPort = 1001
# Install LogUdpSourceApp on de5 and UdpSinkApp on de4, #flow17
*.de5.app[7].typename = "LogUdpSourceApp"
*.de5.app[7].display-name = "flow17_5to4"
*.de5.app[7].flowId = 17
*.de5.app[7].io.destAddress = "de4"
*.de5.app[7].io.destPort = 1003
*.de5.app[7].source.initialProductionOffset = 50 * 16.384us
*.de4.app[6].typename = "UdpSinkApp"
*.de4.app[6].io.localPort = 1003
# Install LogUdpSourceApp on de2 and UdpSinkApp on de3, #flow18
*.de2.app[6].typename = "LogUdpSourceApp"
*.de2.app[6].display-name = "flow18_2to3"
*.de2.app[6].flowId = 18
*.de2.app[6].io.destAddress = "de3"
*.de2.app[6].io.destPort = 1001
*.de2.app[6].source.initialProductionOffset = 43 * 16.384us
*.de3.app[4].typename = "UdpSinkApp"
*.de3.app[4].io.localPort = 1001
# Install LogUdpSourceApp on de2 and UdpSinkApp on de5, #flow19
*.de2.app[7].typename = "LogUdpSourceApp"
*.de2.app[7].display-name = "flow19_2to5"
*.de2.app[7].flowId = 19
*.de2.app[7].io.destAddress = "de5"
*.de2.app[7].io.destPort = 1004
*.de2.app[7].source.initialProductionOffset = 53 * 16.384us
*.de5.app[8].typename = "UdpSinkApp"
*.de5.app[8].io.localPort = 1004
# Install LogUdpSourceApp on de4 and UdpSinkApp on de1, #flow20
*.de4.app[7].typename = "LogUdpSourceApp"
*.de4.app[7].display-name = "flow20_4to1"
*.de4.app[7].flowId = 20
*.de4.app[7].io.destAddress = "de1"
*.de4.app[7].io.destPort = 1002
*.de4.app[7].source.initialProductionOffset = 1 * 16.384us
*.de1.app[6].typename = "UdpSinkApp"
*.de1.app[6].io.localPort = 1002
# Install LogUdpSourceApp on de1 and UdpSinkApp on de3, #flow21
*.de1.app[7].typename = "LogUdpSourceApp"
*.de1.app[7].display-name = "flow21_1to3"
*.de1.app[7].flowId = 21
*.de1.app[7].io.destAddress = "de3"
*.de1.app[7].io.destPort = 1002
*.de1.app[7].source.initialProductionOffset = 15 * 16.384us
*.de3.app[5].typename = "UdpSinkApp"
*.de3.app[5].io.localPort = 1002
# Install LogUdpSourceApp on de3 and UdpSinkApp on de4, #flow22
*.de3.app[6].typename = "LogUdpSourceApp"
*.de3.app[6].display-name = "flow22_3to4"
*.de3.app[6].flowId = 22
*.de3.app[6].io.destAddress = "de4"
*.de3.app[6].io.destPort = 1004
*.de3.app[6].source.initialProductionOffset = 22 * 16.384us
*.de4.app[8].typename = "UdpSinkApp"
*.de4.app[8].io.localPort = 1004
# Install LogUdpSourceApp on de0 and UdpSinkApp on de3, #flow23
*.de0.app[5].typename = "LogUdpSourceApp"
*.de0.app[5].display-name = "flow23_0to3"
*.de0.app[5].flowId = 23
*.de0.app[5].io.destAddress = "de3"
*.de0.app[5].io.destPort = 1003
*.de0.app[5].source.initialProductionOffset = 39 * 16.384us
*.de3.app[7].typename = "UdpSinkApp"
*.de3.app[7].io.localPort = 1003
# Install LogUdpSourceApp on de2 and UdpSinkApp on de0, #flow24
*.de2.app[8].typename = "LogUdpSourceApp"
*.de2.app[8].display-name = "flow24_2to0"
*.de2.app[8].flowId = 24
*.de2.app[8].io.destAddress = "de0"
*.de2.app[8].io.destPort = 1003
*.de2.app[8].source.initialProductionOffset = 62 * 16.384us
*.de0.app[6].typename = "UdpSinkApp"
*.de0.app[6].io.localPort = 1003

# Configuration for flow packets
*.de*.app[*].source.packetLength = 1500B - 54B
*.de*.app[*].source.productionInterval = 64 * 16.384us

# Install loggers on each device
*.de*.eth[*].phyLayer.receiver.typename = "LogPacketReceiver"
*.de*.eth[*].phyLayer.transmitter.typename = "LogPacketTransmitter"

# Install loggers on each switch
*.sw*.hasEgressTrafficShaping = true
*.sw*.eth[*].macLayer.queue.numTrafficClasses = 1
*.sw*.eth[*].phyLayer.receiver.typename = "FlawedPacketReceiver"
*.sw*.eth[*].phyLayer.transmitter.typename = "FlawedPacketTransmitter"
# Install flawed queue on each gate
*.sw*.eth[*].macLayer.queue.queue[*].typename = "FlawedPacketQueue"

# Static forwarding table
*.macForwardingTableConfigurator.typename = ""
*.sw0.macTable.forwardingTable = [{address: "de0", interface: "eth0"},
                                  {address: "de1", interface: "eth1"},
                                  {address: "de2", interface: "eth1"},
                                  {address: "de3", interface: "eth1"},
                                  {address: "de4", interface: "eth2"},
                                  {address: "de5", interface: "eth2"}]
*.sw1.macTable.forwardingTable = [{address: "de0", interface: "eth2"},
                                  {address: "de1", interface: "eth0"},
                                  {address: "de2", interface: "eth1"},
                                  {address: "de3", interface: "eth1"},
                                  {address: "de4", interface: "eth1"},
                                  {address: "de5", interface: "eth2"}]
*.sw2.macTable.forwardingTable = [{address: "de0", interface: "eth2"},
                                  {address: "de1", interface: "eth2"},
                                  {address: "de2", interface: "eth0"},
                                  {address: "de3", interface: "eth1"},
                                  {address: "de4", interface: "eth1"},
                                  {address: "de5", interface: "eth2"}]
*.sw3.macTable.forwardingTable = [{address: "de0", interface: "eth2"},
                                  {address: "de1", interface: "eth2"},
                                  {address: "de2", interface: "eth2"},
                                  {address: "de3", interface: "eth0"},
                                  {address: "de4", interface: "eth1"},
                                  {address: "de5", interface: "eth1"}]
*.sw4.macTable.forwardingTable = [{address: "de0", interface: "eth1"},
                                  {address: "de1", interface: "eth1"},
                                  {address: "de2", interface: "eth2"},
                                  {address: "de3", interface: "eth2"},
                                  {address: "de4", interface: "eth0"},
                                  {address: "de5", interface: "eth1"}]
*.sw5.macTable.forwardingTable = [{address: "de0", interface: "eth1"},
                                  {address: "de1", interface: "eth1"},
                                  {address: "de2", interface: "eth1"},
                                  {address: "de3", interface: "eth2"},
                                  {address: "de4", interface: "eth2"},
                                  {address: "de5", interface: "eth0"}]
*.sw*.bridging.interfaceRelay.learner.typename = "MuteLearner"

# ---- END OF NETWORK CONFIGURATION ----
# Visualization configuration
**.displayGateSchedules = true

# Output configuration
cmdenv-express-mode = false
cmdenv-event-banners = false
**.cmdenv-log-level = "WARN"

cmdenv-log-prefix = ""
cmdenv-redirect-output = true
cmdenv-output-file = "../log/${network}/flow25/log_raw/log_${runnumber}.txt"

**.vector-recording = false
**.scalar-recording = false

