#*****************************************************************************************
# Vivado (TM) v2020.1 (64-bit)
#
# tns_tsn_03.tcl: Tcl script for re-creating project 'tns_tsn_03'
#
# Generated by Vivado on Tue Mar 28 10:57:26 +0800 2023
# IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (tns_tsn_03.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "D:/tns-tsn-switch/Work_Dir/datapath_qbv_tb_behav.wcfg"
#
# 3. The following remote source files that were added to the original project:-
#
#    "D:/tns-tsn-switch/IP/clk_wiz_0_1/clk_wiz_0.xci"
#    "D:/tns-tsn-switch/IP/axis_dwidth_converter_8_256/axis_dwidth_converter_8_256.xci"
#    "D:/tns-tsn-switch/IP/axis_dwidth_converter_256_8/axis_dwidth_converter_256_8.xci"
#    "D:/tns-tsn-switch/IP/axis_clock_converter_0/axis_clock_converter_0.xci"
#    "D:/tns-tsn-switch/BD/zynq_ps/zynq_ps.bd"
#    "D:/tns-tsn-switch/IP/fifo_generator_0/fifo_generator_0.xci"
#    "D:/tns-tsn-switch/IP/tri_mode_ethernet_mac_1/tri_mode_ethernet_mac_1.xci"
#    "D:/tns-tsn-switch/HDL/cpu_header/cpu_header_add.v"
#    "D:/tns-tsn-switch/HDL/cpu_header/cpu_header_rm.v"
#    "D:/tns-tsn-switch/HDL/hw_timestamp/tsu/dcfifo_128b_16_tsu.v"
#    "D:/tns-tsn-switch/HDL/eth_parser.v"
#    "D:/tns-tsn-switch/HDL/fallthrough_small_fifo.v"
#    "D:/tns-tsn-switch/HDL/input_arbiter_cpu_regs_defines.v"
#    "D:/tns-tsn-switch/HDL/input_arbiter.v"
#    "D:/tns-tsn-switch/HDL/input_arbiter_cpu_regs.v"
#    "D:/tns-tsn-switch/HDL/mac_cam_lut.v"
#    "D:/tns-tsn-switch/HDL/output_port_lookup_cpu_regs_defines.v"
#    "D:/tns-tsn-switch/HDL/output_port_lookup_cpu_regs.v"
#    "D:/tns-tsn-switch/HDL/hw_timestamp/tsu/ptp_parser.v"
#    "D:/tns-tsn-switch/HDL/hw_timestamp/tsu/ptp_parser_axis.v"
#    "D:/tns-tsn-switch/HDL/hw_timestamp/tsu/ptp_queue.v"
#    "D:/tns-tsn-switch/HDL/qav_credit_based_shaper.v"
#    "D:/tns-tsn-switch/HDL/qav_datapath.v"
#    "D:/tns-tsn-switch/HDL/qav_mac.v"
#    "D:/tns-tsn-switch/HDL/qav_mac_no_shared.v"
#    "D:/tns-tsn-switch/HDL/qav_output_queues_cpu_regs_defines.v"
#    "D:/tns-tsn-switch/HDL/qav_output_queues.v"
#    "D:/tns-tsn-switch/HDL/qav_output_queues_cpu_regs.v"
#    "D:/tns-tsn-switch/HDL/qbv_mac.v"
#    "D:/tns-tsn-switch/HDL/qbv_mac_no_shared.v"
#    "D:/tns-tsn-switch/HDL/qbv_time_aware_shaper.v"
#    "D:/tns-tsn-switch/HDL/hw_timestamp/rgs.v"
#    "D:/tns-tsn-switch/HDL/hw_timestamp/rtc.v"
#    "D:/tns-tsn-switch/HDL/small_fifo.v"
#    "D:/tns-tsn-switch/HDL/switch_lite_output_port_lookup.v"
#    "D:/tns-tsn-switch/HDL/hw_timestamp/time_sync_hw.v"
#    "D:/tns-tsn-switch/HDL/hw_timestamp/time_sync_hw_axi_sm.v"
#    "D:/tns-tsn-switch/HDL/hw_timestamp/time_sync_hw_axi_sm_1.v"
#    "D:/tns-tsn-switch/HDL/hw_timestamp/time_sync_hw_axi_sm_2.v"
#    "D:/tns-tsn-switch/HDL/tri_mode_ethernet_mac_0_axi_lite_sm.v"
#    "D:/tns-tsn-switch/HDL/tri_mode_ethernet_mac_0_bram_tdp.v"
#    "D:/tns-tsn-switch/HDL/tri_mode_ethernet_mac_0_example_design_resets.v"
#    "D:/tns-tsn-switch/HDL/tri_mode_ethernet_mac_0_reset_sync.v"
#    "D:/tns-tsn-switch/HDL/tri_mode_ethernet_mac_0_rx_client_fifo.v"
#    "D:/tns-tsn-switch/HDL/tri_mode_ethernet_mac_0_sync_block.v"
#    "D:/tns-tsn-switch/HDL/tri_mode_ethernet_mac_0_tx_client_fifo.v"
#    "D:/tns-tsn-switch/HDL/hw_timestamp/tsu/tsu_axis.v"
#    "D:/tns-tsn-switch/HDL/hw_timestamp/tsu/tsu_rgmii.v"
#    "D:/tns-tsn-switch/BD/zynq_ps/hdl/zynq_ps_wrapper.v"
#    "D:/tns-tsn-switch/HDL/tns_tsn_03.v"
#    "D:/tns-tsn-switch/IP/tri_mode_ethernet_mac_0/tri_mode_ethernet_mac_0.xci"
#    "D:/tns-tsn-switch/HDL/cycle_timer_sm.v"
#    "D:/tns-tsn-switch/HDL/simple_mac_no_shared.v"
#    "D:/tns-tsn-switch/HDL/ts_strict.v"
#    "D:/tns-tsn-switch/HDL/simple_mac.v"
#    "D:/tns-tsn-switch/HDL/ts_cbs.v"
#    "D:/tns-tsn-switch/HDL/transmission_selection.v"
#    "D:/tns-tsn-switch/HDL/list_execute_sm.v"
#    "D:/tns-tsn-switch/HDL/priority_tagger.v"
#    "D:/tns-tsn-switch/HDL/priority_untagger.v"
#    "D:/tns-tsn-switch/HDL/output_queues.v"
#    "D:/tns-tsn-switch/HDL/simple_output_port_lookup.v"
#    "D:/tns-tsn-switch/HDL/cycle_timer_sm_self.v"
#    "D:/tns-tsn-switch/HDL/datapath/datapath_registers.v"
#    "D:/tns-tsn-switch/HDL/datapath/configurable_output_port_lookup.v"
#    "D:/tns-tsn-switch/HDL/datapath/input_arbiter_six_ports.v"
#    "D:/tns-tsn-switch/HDL/datapath/output_queues_plc.v"
#    "D:/tns-tsn-switch/HDL/cycle_timer_sm_aligned.v"
#    "D:/tns-tsn-switch/HDL/hw_timestamp/super_rtc.v"
#    "D:/tns-tsn-switch/IP/mult_1e9_gen_0/mult_1e9_gen_0.xci"
#    "D:/tns-tsn-switch/HDL/datapath/output_queues_v3.v"
#    "D:/tns-tsn-switch/HDL/datapath/datapath_v3.v"
#    "D:/tns-tsn-switch/HDL/datapath/input_arbiter_seven_ports.v"
#    "D:/tns-tsn-switch/HDL/mac/simple_mac_no_shared_int.v"
#    "D:/tns-tsn-switch/HDL/tri_mode_ethernet_mac_2_axi_lite_sm.v"
#    "D:/tns-tsn-switch/IP/tri_mode_ethernet_mac_2/tri_mode_ethernet_mac_2.xci"
#    "d:/tns-tsn-switch/IP/input_arbiter_fifo/input_arbiter_fifo.xci"
#    "D:/tns-tsn-switch/Constraints/tns_tsn_03.xdc"
#    "D:/tns-tsn-switch/Testbenches/tri_mode_ethernet_mac_0_max_frame_typ.v"
#    "D:/tns-tsn-switch/Testbenches/tns_tsn_03_tb.v"
#    "D:/tns-tsn-switch/Testbenches/time_sync_hw_tb.v"
#    "D:/tns-tsn-switch/Testbenches/tns_tsn_03_tb_behav_axis_walkthrough.wcfg"
#    "D:/tns-tsn-switch/Testbenches/tns_tsn_03_tb_behav_TMEM.wcfg"
#    "D:/tns-tsn-switch/Testbenches/tns_tsn_03_tb_behav_port0_rx_fifo.wcfg"
#    "D:/tns-tsn-switch/Testbenches/tns_tsn_03_tb_behav_cbs.wcfg"
#    "D:/tns-tsn-switch/Testbenches/tns_tsn_03_tb_behav_cpuheader_add.wcfg"
#    "D:/tns-tsn-switch/Testbenches/tns_tsn_03_tb_behav_time_sync_hw.wcfg"
#    "D:/tns-tsn-switch/Testbenches/tns_tsn_03_tb_behav_time_sync_hw_rgs.wcfg"
#    "D:/tns-tsn-switch/Testbenches/tns_tsn_03_tb_behav_rtc.wcfg"
#    "D:/tns-tsn-switch/Testbenches/tns_tsn_03_tb_behav_tsu_axis.wcfg"
#    "D:/tns-tsn-switch/Testbenches/ab_traffic_exp_switch_tb.v"
#    "D:/tns-tsn-switch/Testbenches/switch_tb.v"
#    "D:/tns-tsn-switch/Testbenches/rtc_tb.v"
#    "D:/tns-tsn-switch/Testbenches/transmission_selection/list_execute_sm_tb.v"
#    "D:/tns-tsn-switch/Testbenches/packet_generator_dscp.v"
#    "D:/tns-tsn-switch/Testbenches/tsu_tb/rgmii_rx_bfm.v"
#    "D:/tns-tsn-switch/Testbenches/tsu_tb/rgmii_tx_bfm.v"
#    "D:/tns-tsn-switch/Testbenches/priority_tagger_tb.v"
#    "D:/tns-tsn-switch/Testbenches/simple_output_port_lookup_tb.v"
#    "D:/tns-tsn-switch/Testbenches/list_execute_sm_tb.v"
#    "D:/tns-tsn-switch/Testbenches/self_learn/packet_generator_self_learn.v"
#    "D:/tns-tsn-switch/Testbenches/cpu_header/cpu_header_tb.v"
#    "D:/tns-tsn-switch/Testbenches/transmission_selection/cycle_timer_sm_aligned_tb.v"
#    "D:/tns-tsn-switch/Testbenches/transmission_selection_tb.v"
#    "D:/tns-tsn-switch/Testbenches/output_queues_v3_tb.v"
#    "D:/tns-tsn-switch/Testbenches/datapath/datapath_qbv_tb.v"
#    "D:/tns-tsn-switch/Testbenches/datapath_tb.v"
#    "D:/tns-tsn-switch/Testbenches/qbv_shaper_tb.v"
#    "D:/tns-tsn-switch/Testbenches/self_learn/datapath_self_learn_tb.v"
#    "D:/tns-tsn-switch/Testbenches/priority_untagger_tb.v"
#    "D:/tns-tsn-switch/Testbenches/packet_generator.v"
#    "D:/tns-tsn-switch/Testbenches/datapath/datapath_ps_eth_tb.v"
#    "D:/tns-tsn-switch/Testbenches/tsu_tb/tsu_queue_tb.v"
#    "D:/tns-tsn-switch/Testbenches/tns_tsn_03_dma_tb.v"
#    "D:/tns-tsn-switch/Testbenches/tsu_axis/tsu_axis_tb.v"
#    "D:/tns-tsn-switch/Testbenches/tri_mode_ethernet_mac_0_max_frame_typ.v"
#    "D:/tns-tsn-switch/Testbenches/tns_tsn_03_dma_tb.v"
#    "D:/tns-tsn-switch/Testbenches/tsu_tb/rgmii_rx_bfm.v"
#    "D:/tns-tsn-switch/Testbenches/tsu_tb/rgmii_tx_bfm.v"
#    "D:/tns-tsn-switch/Testbenches/tsu_tb/tsu_queue_tb.v"
#    "D:/tns-tsn-switch/Testbenches/tsu_tb/ptpdv2_tx.txt"
#    "D:/tns-tsn-switch/Testbenches/tsu_tb/ptpdv2_rx.txt"
#    "D:/tns-tsn-switch/Testbenches/cpu_header/cpu_header_tb.v"
#    "D:/tns-tsn-switch/HDL/hw_timestamp/tsu/dcfifo_128b_16_tsu.v"
#    "D:/tns-tsn-switch/HDL/hw_timestamp/tsu/ptp_parser_axis.v"
#    "D:/tns-tsn-switch/HDL/hw_timestamp/tsu/ptp_queue.v"
#    "D:/tns-tsn-switch/HDL/hw_timestamp/tsu/tsu_axis.v"
#    "D:/tns-tsn-switch/Testbenches/tsu_axis/tsu_axis_tb.v"
#    "D:/tns-tsn-switch/HDL/hw_timestamp/tsu/ptp_parser.v"
#    "D:/tns-tsn-switch/Testbenches/tsu_axis/tsu_axis_tb_behav_dut.wcfg"
#    "D:/tns-tsn-switch/Testbenches/tsu_axis/tsu_axis_tb.v"
#    "D:/tns-tsn-switch/Testbenches/tsu_axis/tsu_axis_tb_behav_dut.wcfg"
#    "D:/tns-tsn-switch/Testbenches/rtc_tb.v"
#    "D:/tns-tsn-switch/Testbenches/rtc_tb_behav.wcfg"
#    "D:/tns-tsn-switch/Testbenches/transmission_selection_tb.v"
#    "D:/tns-tsn-switch/Testbenches/packet_generator.v"
#    "D:/tns-tsn-switch/HDL/transmission_selection.v"
#    "D:/tns-tsn-switch/HDL/cycle_timer_sm.v"
#    "D:/tns-tsn-switch/HDL/list_execute_sm.v"
#    "D:/tns-tsn-switch/HDL/ts_strict.v"
#    "D:/tns-tsn-switch/HDL/ts_cbs.v"
#    "D:/tns-tsn-switch/Testbenches/transmission_selection/cycle_timer_sm_aligned_tb.v"
#    "D:/tns-tsn-switch/HDL/cycle_timer_sm_aligned.v"
#    "D:/tns-tsn-switch/Testbenches/transmission_selection/cycle_timer_sm_aligned_tb_behav.wcfg"
#    "D:/tns-tsn-switch/Testbenches/transmission_selection/list_execute_sm_tb.v"
#    "D:/tns-tsn-switch/Testbenches/transmission_selection/list_execute_sm_tb_behav.wcfg"
#    "D:/tns-tsn-switch/Testbenches/datapath/datapath_ps_eth_tb.v"
#    "D:/tns-tsn-switch/Testbenches/packet_generator.v"
#    "D:/tns-tsn-switch/Testbenches/datapath/datapath_ps_eth_tb.v"
#    "D:/tns-tsn-switch/Testbenches/datapath/datapath_qbv_tb.v"
#    "D:/tns-tsn-switch/Testbenches/packet_generator.v"
#    "D:/tns-tsn-switch/Testbenches/datapath/datapath_qbv_8bit_tb.v"
#    "D:/tns-tsn-switch/Testbenches/packet_generator_on_time.v"
#    "D:/tns-tsn-switch/Testbenches/datapath/datapath_qbv_8bit_full_background_tb.v"
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "tns_tsn_03"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "tns_tsn_03.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/Work_Dir"]"

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xc7z020clg484-2

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xc7z020clg484-2" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "source_mgmt_mode" -value "DisplayOnly" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "49" -objects $obj
set_property -name "webtalk.ies_export_sim" -value "49" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "49" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "49" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "49" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "49" -objects $obj
set_property -name "webtalk.xcelium_export_sim" -value "1" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "49" -objects $obj
set_property -name "webtalk.xsim_launch_sim" -value "718" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set IP repository paths
set obj [get_filesets sources_1]
if { $obj != {} } {
   set_property "ip_repo_paths" "[file normalize "$origin_dir/../ip_repo/myip_1.0"]" $obj

   # Rebuild user ip_repo's index before adding any source files
   update_ip_catalog -rebuild
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/IP/clk_wiz_0_1/clk_wiz_0.xci"] \
 [file normalize "${origin_dir}/IP/axis_dwidth_converter_8_256/axis_dwidth_converter_8_256.xci"] \
 [file normalize "${origin_dir}/IP/axis_dwidth_converter_256_8/axis_dwidth_converter_256_8.xci"] \
 [file normalize "${origin_dir}/IP/axis_clock_converter_0/axis_clock_converter_0.xci"] \
 [file normalize "${origin_dir}/BD/zynq_ps/zynq_ps.bd"] \
 [file normalize "${origin_dir}/IP/fifo_generator_0/fifo_generator_0.xci"] \
 [file normalize "${origin_dir}/IP/tri_mode_ethernet_mac_1/tri_mode_ethernet_mac_1.xci"] \
 [file normalize "${origin_dir}/HDL/cpu_header/cpu_header_add.v"] \
 [file normalize "${origin_dir}/HDL/cpu_header/cpu_header_rm.v"] \
 [file normalize "${origin_dir}/HDL/hw_timestamp/tsu/dcfifo_128b_16_tsu.v"] \
 [file normalize "${origin_dir}/HDL/eth_parser.v"] \
 [file normalize "${origin_dir}/HDL/fallthrough_small_fifo.v"] \
 [file normalize "${origin_dir}/HDL/input_arbiter_cpu_regs_defines.v"] \
 [file normalize "${origin_dir}/HDL/input_arbiter.v"] \
 [file normalize "${origin_dir}/HDL/input_arbiter_cpu_regs.v"] \
 [file normalize "${origin_dir}/HDL/mac_cam_lut.v"] \
 [file normalize "${origin_dir}/HDL/output_port_lookup_cpu_regs_defines.v"] \
 [file normalize "${origin_dir}/HDL/output_port_lookup_cpu_regs.v"] \
 [file normalize "${origin_dir}/HDL/hw_timestamp/tsu/ptp_parser.v"] \
 [file normalize "${origin_dir}/HDL/hw_timestamp/tsu/ptp_parser_axis.v"] \
 [file normalize "${origin_dir}/HDL/hw_timestamp/tsu/ptp_queue.v"] \
 [file normalize "${origin_dir}/HDL/qav_credit_based_shaper.v"] \
 [file normalize "${origin_dir}/HDL/qav_datapath.v"] \
 [file normalize "${origin_dir}/HDL/qav_mac.v"] \
 [file normalize "${origin_dir}/HDL/qav_mac_no_shared.v"] \
 [file normalize "${origin_dir}/HDL/qav_output_queues_cpu_regs_defines.v"] \
 [file normalize "${origin_dir}/HDL/qav_output_queues.v"] \
 [file normalize "${origin_dir}/HDL/qav_output_queues_cpu_regs.v"] \
 [file normalize "${origin_dir}/HDL/qbv_mac.v"] \
 [file normalize "${origin_dir}/HDL/qbv_mac_no_shared.v"] \
 [file normalize "${origin_dir}/HDL/qbv_time_aware_shaper.v"] \
 [file normalize "${origin_dir}/HDL/hw_timestamp/rgs.v"] \
 [file normalize "${origin_dir}/HDL/hw_timestamp/rtc.v"] \
 [file normalize "${origin_dir}/HDL/small_fifo.v"] \
 [file normalize "${origin_dir}/HDL/switch_lite_output_port_lookup.v"] \
 [file normalize "${origin_dir}/HDL/hw_timestamp/time_sync_hw.v"] \
 [file normalize "${origin_dir}/HDL/hw_timestamp/time_sync_hw_axi_sm.v"] \
 [file normalize "${origin_dir}/HDL/hw_timestamp/time_sync_hw_axi_sm_1.v"] \
 [file normalize "${origin_dir}/HDL/hw_timestamp/time_sync_hw_axi_sm_2.v"] \
 [file normalize "${origin_dir}/HDL/tri_mode_ethernet_mac_0_axi_lite_sm.v"] \
 [file normalize "${origin_dir}/HDL/tri_mode_ethernet_mac_0_bram_tdp.v"] \
 [file normalize "${origin_dir}/HDL/tri_mode_ethernet_mac_0_example_design_resets.v"] \
 [file normalize "${origin_dir}/HDL/tri_mode_ethernet_mac_0_reset_sync.v"] \
 [file normalize "${origin_dir}/HDL/tri_mode_ethernet_mac_0_rx_client_fifo.v"] \
 [file normalize "${origin_dir}/HDL/tri_mode_ethernet_mac_0_sync_block.v"] \
 [file normalize "${origin_dir}/HDL/tri_mode_ethernet_mac_0_tx_client_fifo.v"] \
 [file normalize "${origin_dir}/HDL/hw_timestamp/tsu/tsu_axis.v"] \
 [file normalize "${origin_dir}/HDL/hw_timestamp/tsu/tsu_rgmii.v"] \
 [file normalize "${origin_dir}/BD/zynq_ps/hdl/zynq_ps_wrapper.v"] \
 [file normalize "${origin_dir}/HDL/tns_tsn_03.v"] \
 [file normalize "${origin_dir}/IP/tri_mode_ethernet_mac_0/tri_mode_ethernet_mac_0.xci"] \
 [file normalize "${origin_dir}/HDL/cycle_timer_sm.v"] \
 [file normalize "${origin_dir}/HDL/simple_mac_no_shared.v"] \
 [file normalize "${origin_dir}/HDL/ts_strict.v"] \
 [file normalize "${origin_dir}/HDL/simple_mac.v"] \
 [file normalize "${origin_dir}/HDL/ts_cbs.v"] \
 [file normalize "${origin_dir}/HDL/transmission_selection.v"] \
 [file normalize "${origin_dir}/HDL/list_execute_sm.v"] \
 [file normalize "${origin_dir}/HDL/priority_tagger.v"] \
 [file normalize "${origin_dir}/HDL/priority_untagger.v"] \
 [file normalize "${origin_dir}/HDL/output_queues.v"] \
 [file normalize "${origin_dir}/HDL/simple_output_port_lookup.v"] \
 [file normalize "${origin_dir}/HDL/cycle_timer_sm_self.v"] \
 [file normalize "${origin_dir}/HDL/datapath/datapath_registers.v"] \
 [file normalize "${origin_dir}/HDL/datapath/configurable_output_port_lookup.v"] \
 [file normalize "${origin_dir}/HDL/datapath/input_arbiter_six_ports.v"] \
 [file normalize "${origin_dir}/HDL/datapath/output_queues_plc.v"] \
 [file normalize "${origin_dir}/HDL/cycle_timer_sm_aligned.v"] \
 [file normalize "${origin_dir}/HDL/hw_timestamp/super_rtc.v"] \
 [file normalize "${origin_dir}/IP/mult_1e9_gen_0/mult_1e9_gen_0.xci"] \
 [file normalize "${origin_dir}/HDL/datapath/output_queues_v3.v"] \
 [file normalize "${origin_dir}/HDL/datapath/datapath_v3.v"] \
 [file normalize "${origin_dir}/HDL/datapath/input_arbiter_seven_ports.v"] \
 [file normalize "${origin_dir}/HDL/mac/simple_mac_no_shared_int.v"] \
 [file normalize "${origin_dir}/HDL/tri_mode_ethernet_mac_2_axi_lite_sm.v"] \
 [file normalize "${origin_dir}/IP/tri_mode_ethernet_mac_2/tri_mode_ethernet_mac_2.xci"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/IP/clk_wiz_0_1/clk_wiz_0.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "$origin_dir/IP/axis_dwidth_converter_8_256/axis_dwidth_converter_8_256.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "$origin_dir/IP/axis_dwidth_converter_256_8/axis_dwidth_converter_256_8.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "$origin_dir/IP/axis_clock_converter_0/axis_clock_converter_0.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "$origin_dir/BD/zynq_ps/zynq_ps.bd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "registered_with_manager" -value "1" -objects $file_obj

set file "$origin_dir/IP/fifo_generator_0/fifo_generator_0.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "$origin_dir/IP/tri_mode_ethernet_mac_1/tri_mode_ethernet_mac_1.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "$origin_dir/IP/tri_mode_ethernet_mac_0/tri_mode_ethernet_mac_0.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "$origin_dir/IP/mult_1e9_gen_0/mult_1e9_gen_0.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "$origin_dir/IP/tri_mode_ethernet_mac_2/tri_mode_ethernet_mac_2.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "tns_tsn_03" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/IP/input_arbiter_fifo/input_arbiter_fifo.xci"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/IP/input_arbiter_fifo/input_arbiter_fifo.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset file properties for local files
# None

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/Constraints/tns_tsn_03.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/Constraints/tns_tsn_03.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_constrs_file" -value "[file normalize "$origin_dir/Constraints/tns_tsn_03.xdc"]" -objects $obj
set_property -name "target_part" -value "xc7z020clg484-2" -objects $obj
set_property -name "target_ucf" -value "[file normalize "$origin_dir/Constraints/tns_tsn_03.xdc"]" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
set files [list \
 [file normalize "${origin_dir}/Testbenches/tri_mode_ethernet_mac_0_max_frame_typ.v"] \
 [file normalize "${origin_dir}/Testbenches/tns_tsn_03_tb.v"] \
 [file normalize "${origin_dir}/Testbenches/time_sync_hw_tb.v"] \
 [file normalize "${origin_dir}/Testbenches/tns_tsn_03_tb_behav_axis_walkthrough.wcfg"] \
 [file normalize "${origin_dir}/Testbenches/tns_tsn_03_tb_behav_TMEM.wcfg"] \
 [file normalize "${origin_dir}/Testbenches/tns_tsn_03_tb_behav_port0_rx_fifo.wcfg"] \
 [file normalize "${origin_dir}/Testbenches/tns_tsn_03_tb_behav_cbs.wcfg"] \
 [file normalize "${origin_dir}/Testbenches/tns_tsn_03_tb_behav_cpuheader_add.wcfg"] \
 [file normalize "${origin_dir}/Testbenches/tns_tsn_03_tb_behav_time_sync_hw.wcfg"] \
 [file normalize "${origin_dir}/Testbenches/tns_tsn_03_tb_behav_time_sync_hw_rgs.wcfg"] \
 [file normalize "${origin_dir}/Testbenches/tns_tsn_03_tb_behav_rtc.wcfg"] \
 [file normalize "${origin_dir}/Testbenches/tns_tsn_03_tb_behav_tsu_axis.wcfg"] \
 [file normalize "${origin_dir}/Testbenches/ab_traffic_exp_switch_tb.v"] \
 [file normalize "${origin_dir}/Testbenches/switch_tb.v"] \
 [file normalize "${origin_dir}/Testbenches/rtc_tb.v"] \
 [file normalize "${origin_dir}/Testbenches/transmission_selection/list_execute_sm_tb.v"] \
 [file normalize "${origin_dir}/Testbenches/packet_generator_dscp.v"] \
 [file normalize "${origin_dir}/Testbenches/tsu_tb/rgmii_rx_bfm.v"] \
 [file normalize "${origin_dir}/Testbenches/tsu_tb/rgmii_tx_bfm.v"] \
 [file normalize "${origin_dir}/Testbenches/priority_tagger_tb.v"] \
 [file normalize "${origin_dir}/Testbenches/simple_output_port_lookup_tb.v"] \
 [file normalize "${origin_dir}/Testbenches/list_execute_sm_tb.v"] \
 [file normalize "${origin_dir}/Testbenches/self_learn/packet_generator_self_learn.v"] \
 [file normalize "${origin_dir}/Testbenches/cpu_header/cpu_header_tb.v"] \
 [file normalize "${origin_dir}/Testbenches/transmission_selection/cycle_timer_sm_aligned_tb.v"] \
 [file normalize "${origin_dir}/Testbenches/transmission_selection_tb.v"] \
 [file normalize "${origin_dir}/Testbenches/output_queues_v3_tb.v"] \
 [file normalize "${origin_dir}/Testbenches/datapath/datapath_qbv_tb.v"] \
 [file normalize "${origin_dir}/Testbenches/datapath_tb.v"] \
 [file normalize "${origin_dir}/Testbenches/qbv_shaper_tb.v"] \
 [file normalize "${origin_dir}/Testbenches/self_learn/datapath_self_learn_tb.v"] \
 [file normalize "${origin_dir}/Testbenches/priority_untagger_tb.v"] \
 [file normalize "${origin_dir}/Testbenches/packet_generator.v"] \
 [file normalize "${origin_dir}/Testbenches/datapath/datapath_ps_eth_tb.v"] \
 [file normalize "${origin_dir}/Testbenches/tsu_tb/tsu_queue_tb.v"] \
 [file normalize "${origin_dir}/Testbenches/tns_tsn_03_dma_tb.v"] \
 [file normalize "${origin_dir}/Testbenches/tsu_axis/tsu_axis_tb.v"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sim_1' fileset file properties for remote files
set file "$origin_dir/Testbenches/tns_tsn_03_tb_behav_TMEM.wcfg"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "is_enabled" -value "0" -objects $file_obj

set file "$origin_dir/Testbenches/tns_tsn_03_tb_behav_port0_rx_fifo.wcfg"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "is_enabled" -value "0" -objects $file_obj

set file "$origin_dir/Testbenches/tns_tsn_03_tb_behav_cbs.wcfg"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "is_enabled" -value "0" -objects $file_obj

set file "$origin_dir/Testbenches/tns_tsn_03_tb_behav_cpuheader_add.wcfg"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "is_enabled" -value "0" -objects $file_obj

set file "$origin_dir/Testbenches/tns_tsn_03_tb_behav_time_sync_hw.wcfg"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "is_enabled" -value "0" -objects $file_obj

set file "$origin_dir/Testbenches/tns_tsn_03_tb_behav_time_sync_hw_rgs.wcfg"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "is_enabled" -value "0" -objects $file_obj

set file "$origin_dir/Testbenches/tns_tsn_03_tb_behav_rtc.wcfg"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "is_enabled" -value "0" -objects $file_obj


# Set 'sim_1' fileset file properties for local files
# None

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "hbs.configure_design_for_hier_access" -value "1" -objects $obj
set_property -name "top" -value "switch_tb" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
set_property -name "xsim.simulate.runtime" -value "1s" -objects $obj

# Create 'sim_dma' fileset (if not found)
if {[string equal [get_filesets -quiet sim_dma] ""]} {
  create_fileset -simset sim_dma
}

# Set 'sim_dma' fileset object
set obj [get_filesets sim_dma]
set files [list \
 [file normalize "${origin_dir}/Testbenches/tri_mode_ethernet_mac_0_max_frame_typ.v"] \
 [file normalize "${origin_dir}/Testbenches/tns_tsn_03_dma_tb.v"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sim_dma' fileset file properties for remote files
# None

# Set 'sim_dma' fileset file properties for local files
# None

# Set 'sim_dma' fileset properties
set obj [get_filesets sim_dma]
set_property -name "hbs.configure_design_for_hier_access" -value "1" -objects $obj
set_property -name "top" -value "tns_tsn_03_dma_tb" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
set_property -name "xsim.simulate.runtime" -value "1ms" -objects $obj

# Create 'sim_tsu' fileset (if not found)
if {[string equal [get_filesets -quiet sim_tsu] ""]} {
  create_fileset -simset sim_tsu
}

# Set 'sim_tsu' fileset object
set obj [get_filesets sim_tsu]
set files [list \
 [file normalize "${origin_dir}/Testbenches/tsu_tb/rgmii_rx_bfm.v"] \
 [file normalize "${origin_dir}/Testbenches/tsu_tb/rgmii_tx_bfm.v"] \
 [file normalize "${origin_dir}/Testbenches/tsu_tb/tsu_queue_tb.v"] \
 [file normalize "${origin_dir}/Testbenches/tsu_tb/ptpdv2_tx.txt"] \
 [file normalize "${origin_dir}/Testbenches/tsu_tb/ptpdv2_rx.txt"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sim_tsu' fileset file properties for remote files
# None

# Set 'sim_tsu' fileset file properties for local files
# None

# Set 'sim_tsu' fileset properties
set obj [get_filesets sim_tsu]
set_property -name "hbs.configure_design_for_hier_access" -value "1" -objects $obj
set_property -name "top" -value "tsu_queue_tb" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
set_property -name "xsim.simulate.runtime" -value "1ms" -objects $obj

# Create 'sim_cpu_header' fileset (if not found)
if {[string equal [get_filesets -quiet sim_cpu_header] ""]} {
  create_fileset -simset sim_cpu_header
}

# Set 'sim_cpu_header' fileset object
set obj [get_filesets sim_cpu_header]
set files [list \
 [file normalize "${origin_dir}/Testbenches/cpu_header/cpu_header_tb.v"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sim_cpu_header' fileset file properties for remote files
# None

# Set 'sim_cpu_header' fileset file properties for local files
# None

# Set 'sim_cpu_header' fileset properties
set obj [get_filesets sim_cpu_header]
set_property -name "hbs.configure_design_for_hier_access" -value "1" -objects $obj
set_property -name "top" -value "cpu_header_tb" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
set_property -name "xsim.simulate.runtime" -value "1ms" -objects $obj

# Create 'sim_axis_timestamp' fileset (if not found)
if {[string equal [get_filesets -quiet sim_axis_timestamp] ""]} {
  create_fileset -simset sim_axis_timestamp
}

# Set 'sim_axis_timestamp' fileset object
set obj [get_filesets sim_axis_timestamp]
set files [list \
 [file normalize "${origin_dir}/HDL/hw_timestamp/tsu/dcfifo_128b_16_tsu.v"] \
 [file normalize "${origin_dir}/HDL/hw_timestamp/tsu/ptp_parser_axis.v"] \
 [file normalize "${origin_dir}/HDL/hw_timestamp/tsu/ptp_queue.v"] \
 [file normalize "${origin_dir}/HDL/hw_timestamp/tsu/tsu_axis.v"] \
 [file normalize "${origin_dir}/Testbenches/tsu_axis/tsu_axis_tb.v"] \
 [file normalize "${origin_dir}/HDL/hw_timestamp/tsu/ptp_parser.v"] \
 [file normalize "${origin_dir}/Testbenches/tsu_axis/tsu_axis_tb_behav_dut.wcfg"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sim_axis_timestamp' fileset file properties for remote files
# None

# Set 'sim_axis_timestamp' fileset file properties for local files
# None

# Set 'sim_axis_timestamp' fileset properties
set obj [get_filesets sim_axis_timestamp]
set_property -name "hbs.configure_design_for_hier_access" -value "1" -objects $obj
set_property -name "source_set" -value "" -objects $obj
set_property -name "top" -value "tsu_axis_tb" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
set_property -name "xsim.simulate.runtime" -value "1s" -objects $obj

# Create 'sim_axis_timestamp_all' fileset (if not found)
if {[string equal [get_filesets -quiet sim_axis_timestamp_all] ""]} {
  create_fileset -simset sim_axis_timestamp_all
}

# Set 'sim_axis_timestamp_all' fileset object
set obj [get_filesets sim_axis_timestamp_all]
set files [list \
 [file normalize "${origin_dir}/Testbenches/tsu_axis/tsu_axis_tb.v"] \
 [file normalize "${origin_dir}/Testbenches/tsu_axis/tsu_axis_tb_behav_dut.wcfg"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sim_axis_timestamp_all' fileset file properties for remote files
# None

# Set 'sim_axis_timestamp_all' fileset file properties for local files
# None

# Set 'sim_axis_timestamp_all' fileset properties
set obj [get_filesets sim_axis_timestamp_all]
set_property -name "hbs.configure_design_for_hier_access" -value "1" -objects $obj
set_property -name "top" -value "tsu_axis_tb" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
set_property -name "xsim.simulate.runtime" -value "1s" -objects $obj

# Create 'sim_rtc' fileset (if not found)
if {[string equal [get_filesets -quiet sim_rtc] ""]} {
  create_fileset -simset sim_rtc
}

# Set 'sim_rtc' fileset object
set obj [get_filesets sim_rtc]
set files [list \
 [file normalize "${origin_dir}/Testbenches/rtc_tb.v"] \
 [file normalize "${origin_dir}/Testbenches/rtc_tb_behav.wcfg"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sim_rtc' fileset file properties for remote files
# None

# Set 'sim_rtc' fileset file properties for local files
# None

# Set 'sim_rtc' fileset properties
set obj [get_filesets sim_rtc]
set_property -name "hbs.configure_design_for_hier_access" -value "1" -objects $obj
set_property -name "source_set" -value "" -objects $obj
set_property -name "top" -value "rtc_tb" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
set_property -name "xsim.simulate.runtime" -value "1ms" -objects $obj

# Create 'transmission_selection' fileset (if not found)
if {[string equal [get_filesets -quiet transmission_selection] ""]} {
  create_fileset -simset transmission_selection
}

# Set 'transmission_selection' fileset object
set obj [get_filesets transmission_selection]
set files [list \
 [file normalize "${origin_dir}/Testbenches/transmission_selection_tb.v"] \
 [file normalize "${origin_dir}/Testbenches/packet_generator.v"] \
 [file normalize "${origin_dir}/HDL/transmission_selection.v"] \
 [file normalize "${origin_dir}/HDL/cycle_timer_sm.v"] \
 [file normalize "${origin_dir}/HDL/list_execute_sm.v"] \
 [file normalize "${origin_dir}/HDL/ts_strict.v"] \
 [file normalize "${origin_dir}/HDL/ts_cbs.v"] \
 [file normalize "${origin_dir}/Testbenches/transmission_selection/cycle_timer_sm_aligned_tb.v"] \
 [file normalize "${origin_dir}/HDL/cycle_timer_sm_aligned.v"] \
 [file normalize "${origin_dir}/Testbenches/transmission_selection/cycle_timer_sm_aligned_tb_behav.wcfg"] \
 [file normalize "${origin_dir}/Testbenches/transmission_selection/list_execute_sm_tb.v"] \
 [file normalize "${origin_dir}/Testbenches/transmission_selection/list_execute_sm_tb_behav.wcfg"] \
]
add_files -norecurse -fileset $obj $files

# Set 'transmission_selection' fileset file properties for remote files
# None

# Set 'transmission_selection' fileset file properties for local files
# None

# Set 'transmission_selection' fileset properties
set obj [get_filesets transmission_selection]
set_property -name "hbs.configure_design_for_hier_access" -value "1" -objects $obj
set_property -name "source_set" -value "" -objects $obj
set_property -name "top" -value "list_execute_sm_tb" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
set_property -name "xsim.simulate.runtime" -value "1s" -objects $obj

# Create 'PS_ETH' fileset (if not found)
if {[string equal [get_filesets -quiet PS_ETH] ""]} {
  create_fileset -simset PS_ETH
}

# Set 'PS_ETH' fileset object
set obj [get_filesets PS_ETH]
set files [list \
 [file normalize "${origin_dir}/Testbenches/datapath/datapath_ps_eth_tb.v"] \
 [file normalize "${origin_dir}/Testbenches/packet_generator.v"] \
]
add_files -norecurse -fileset $obj $files

# Set 'PS_ETH' fileset file properties for remote files
# None

# Set 'PS_ETH' fileset file properties for local files
# None

# Set 'PS_ETH' fileset properties
set obj [get_filesets PS_ETH]
set_property -name "hbs.configure_design_for_hier_access" -value "1" -objects $obj
set_property -name "top" -value "datapath_ps_eth_tb" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
set_property -name "xsim.simulate.runtime" -value "1s" -objects $obj

# Create 'sim_2' fileset (if not found)
if {[string equal [get_filesets -quiet sim_2] ""]} {
  create_fileset -simset sim_2
}

# Set 'sim_2' fileset object
set obj [get_filesets sim_2]
# Empty (no sources present)

# Set 'sim_2' fileset properties
set obj [get_filesets sim_2]
set_property -name "hbs.configure_design_for_hier_access" -value "1" -objects $obj
set_property -name "xsim.simulate.runtime" -value "1s" -objects $obj

# Create 'sim_datapath_qbv' fileset (if not found)
if {[string equal [get_filesets -quiet sim_datapath_qbv] ""]} {
  create_fileset -simset sim_datapath_qbv
}

# Set 'sim_datapath_qbv' fileset object
set obj [get_filesets sim_datapath_qbv]
set files [list \
 [file normalize "${origin_dir}/Testbenches/datapath/datapath_ps_eth_tb.v"] \
 [file normalize "${origin_dir}/Testbenches/datapath/datapath_qbv_tb.v"] \
 [file normalize "${origin_dir}/Testbenches/packet_generator.v"] \
 [file normalize "${origin_dir}/Testbenches/datapath/datapath_qbv_8bit_tb.v"] \
 [file normalize "${origin_dir}/Testbenches/packet_generator_on_time.v"] \
 [file normalize "${origin_dir}/Testbenches/datapath/datapath_qbv_8bit_full_background_tb.v"] \
]
add_files -norecurse -fileset $obj $files

# Add local files from the original project (-no_copy_sources specified)
set files [list \
 [file normalize "${origin_dir}/Work_Dir/datapath_qbv_tb_behav.wcfg" ]\
]
set added_files [add_files -fileset sim_datapath_qbv $files]

# Set 'sim_datapath_qbv' fileset file properties for remote files
# None

# Set 'sim_datapath_qbv' fileset file properties for local files
# None

# Set 'sim_datapath_qbv' fileset properties
set obj [get_filesets sim_datapath_qbv]
set_property -name "hbs.configure_design_for_hier_access" -value "1" -objects $obj
set_property -name "top" -value "datapath_qbv_8bit_full_background_tb" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
set_property -name "xsim.simulate.runtime" -value "1s" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xc7z020clg484-2 -flow {Vivado Synthesis 2020} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2020" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "part" -value "xc7z020clg484-2" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xc7z020clg484-2 -flow {Vivado Implementation 2020} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2020" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "part" -value "xc7z020clg484-2" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
